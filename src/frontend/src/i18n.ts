//
// i18n

import { createI18n } from 'vue-i18n'


export const i18n = createI18n({
    legacy: false,
    locale: 'en',
    fallbackLocale: 'en',
    messages: {
        en: {
            errorHeader: "Everything is fine... not",
            errorMessages: {
                unknown: "Something happened but we don't exactly know what it was. Try again later.",
            },
            serverNotFound: 'The backend server did not find the requested information',
            serverDidNotAnswer: 'The backend server did not respond while preloading',
            identityNotFound: 'Unknown Identity',

            main_challenge_1: 'My analogue engineering challenge for you this year is to build {1} from the three {0} that I\'m sending along. You will recognise the shape of a Sonobe unit on the bottom left of the picture below, the intermediate unwrapped stage on the bottom middle and the completely folded Toshies Jewel on the bottom right. You can use the completed Jewel to wrap a small present or hang it up somewhere with a string.',
            main_challenge_2: 'Sonobe units are some of the basic building blocks of {0}. You may expand on this challenge by folding more Sonobe units to construct larger models, as shown in the upper half of the picture. The numbers next to the model correspond to the units you need for the model. Sonobe units are not difficult and quick to fold, but consider recruiting your friends and family to fold them for you ;o) ',
            sonobe_units: 'Sonobe Units',
            toshies_jewel: 'Toshie\'s Jewel',
            feedback_send_me: 'Send me a message',
            feedback_whatever_you_do: 'Whatever you do, take a picture of yourself and the result and upload it here along with a message how annoying it ' +
                'was for you to put it together. It will only be shared with me alone.',
            feedback_your_message: 'Your message',
            feedback_send_button: 'Send',
            making_of_header_1: 'I started to make cards for my friends and family back when we lived in Singapore. I wanted to do something creative that the recipients might not dispose of right after the holiday period and involving technologies I came across in the past year. I generally take the opportunity to do some learning as I come up with this. Not everything involved with this card is readily visible, so what follows is some background to highlight what may not entirely be visible, starting from when you open the envelope.',
            making_of_header_2: 'The text here is consciously written for technical and cultural diversity.',
            making_of_card_title: 'The card itself',
            making_of_card_1: 'The card itself is regular paper you can buy in any stationery shop. But the writing is done with {0}, which I purchased in the {1} Paya Lebar outlet back in Singapore. I really miss the availability of Japanese stationery, not only for its incredible variety but also for its sophistication. While not used for this card, this specifically applies to my large collection of {2}, of which I pick a new one every day to make notes at work with.',
            making_of_card_overengineered: 'over-engineered Japanese mechanical pencils',
            making_of_sonobe_title: 'The Sonobe Units',
            making_of_sonobe_1: 'I was reading {0} on a short trip to Fredrikstad in southern Norway last summer. This excellent book I strongly recommend briefly mentions {1} (you’ll be surprised in what context).',
            making_of_sonobe_2: 'Modular Origami is intriguing because it combines the classic art of Origami with the art of Engineering. There is still no glue involved of course but you can construct a wide range of new models with more than one piece of paper, and it thereby receives interesting mathematical, geometric and architectural options.',
            making_of_sonobe_3: 'The three Sonobe Units I\'ve sent you are just one kind of modular unit and I encourage you to {0} what else you can construct. Sonobe Units are particularly useful to construct geometric forms, particularly suiting polyhedra with equilateral triangular faces. They are flat parallelograms with 45 and 135 degree angles, divided by creases into two diagonal tabs and two corresponding pockets. Combining the three I\'m giving you will result in a hexahedron, colloquially called "Toshies Jewel". If you spend an evening folding 30 Sonobe units, you can build the {1}, which looks very, very appropriate for the time of year. ',
            making_of_nfc_title: 'Near-Field Communication (NFC) Tags',
            making_of_nfc_1: 'I didn’t want you to type in some URL by hand. I often solved this with QR-Codes in the past, which you get to see pretty much everywhere these days. This time, I went for NFC-Tags.',
            making_of_nfc_2: 'The digital part of my card is personalised. I therefore need to know who you are. You would usually be asked for some password but I’m sure you don’t want to remember yet another one. I could have integrated with all kinds of other systems (Google, Facebook/Insta, TikTok, etc) but that didn’t feel good either.',
            making_of_nfc_3: 'The NFC tag your phone recognised to get here is the most common application for {0}, leading to a customised URL containing a unique code that identifies you. I then verify that code to make sure I actually do know you and that yields your identity. If I don\'t have you registered, you\'re led to a page wishing a stranger happy holidays. This sort of "code authentication" is clearly not enterprise grade, but it\'ll do just fine for this purpose. It also saves you from yet another password that, apart from being annoyed, no doubt you\'d forget next year. ',
            making_of_nfc_4: 'There are way more things you can do with NFC tags. There are a number of standards, many for local transport or contactless payments. You can have guests scan them so they can join your wireless network, turn on the light and exchange contacts. It is unfortunate that the most interesting use-cases very quickly require you to write some mobile app and we all know the producers of mobile phones tend to be rather restrictive to do that (looking at you, Apple). ',
            making_of_frontend_title: 'The front-end',
            making_of_frontend_1: 'I have no talent for front-end programming, and this is no exception.  It\'s not the asynchronicity and event-drivenness of user interfaces, I get all that. But I have a real distaste for the chaos that is JavaScript with its myriad of logic-defying exceptional cases. Sure, you will tell me that it\'s just some things you need to remember but frankly, I just can\'t be bothered.',
            making_of_frontend_2: 'It is for that reason that I chose {0} and {1} this time to just make this a tiny little bit better for myself. TypeScript makes sense to me because it at least reports the most egregious traps I might fall into. Vue makes sense with its encapsulation of styles, code and templates in its Vue components. I still spent way, way too much on the front-end cursing all web browsers for their unpredictability.',
            making_of_frontend_3: 'Making text legible is a lot more complicated than you may think, regardless in what medium. I have quite a bit of experience producing content I need its consumers to understand but the design for that to be legible on a screen is a science on its own. This has a lot to do with the classic art of typography for optimum legibility: Size, line-height, number of words per line and even the contrast to the background colour. I invite those who are interested to take a look at the styles used on this site.',
            making_of_frontend_4: 'The entire text here is internationalised based on an attribute of your identity. Internationalisation doesn’t just mean that the content is in a personalised language but also that things like dates are shown in a regional format. It is equally important for the site to show its version and that it negotiates that with its back-end app.',
            making_of_backend_title: 'The back-end app',
            making_of_backend_1: 'The app is a simple {0} {1} application, served by an {2}. FastAPI makes a lot of sense to me because it follows my preferred {3} method for {4} design and very nicely produces an {5} spec for me. Such specs are important to let applications communicate with each other. The app should be more modular when used in a professional context, but it serves its purpose completely the way it is.  ',
            making_of_backend_2: 'I decided early on that the back-end app should also serve the front-end website. This is somewhat unusual for this kind of application, but it saves (a small amount of) cost. It was not particularly easy to convince Azure to let me do it this way. You can see the mechanism in detail at {0}. ',
            making_of_backend_3: 'But doing that causes some other difficulties. Most modern websites are {0}, this one is too. Classic webapps load every page anew, you notice that from the delays as it waits for the back-end. SPAs load their data in the background. With one exception: An SPA will redirect you twice when you sign in. First to a page controlled by the authentication mechanism and then back to where you came from. You do all this multiple times a day and probably don’t even notice it anymore. It is also not generally a problem, except when you host your website from the same back-end app as I have done. It all gets a bit more complicated because the back-end app must answer for things the front-end is intended to answer. There are many ways to tackle that but all of them are ugly. It is therefore the price of being thrifty. '
        },
        de: {
            errorHeader: 'Alles ist gut... oder eben auch nicht',
            errorMessages: {
                unknown: "Da ist etwas passiert aber wir wissen nicht genau was. Probiers später nochmal.",
            },
            serverNotFound: 'Der server konnte keine Information finden',
            serverDidNotAnswer: 'Der server hat uns nicht geantwortet',
            identityNotFound: 'Unbekannte Identität',

            main_challenge_1: 'Dieses Jahr ist meine analoge Engineering-Aufgabe für euch aus den drei {0} einen {1} zu bauen. Im Bild unten links erkennt ihr eine der drei mitgelieferten Sonobe Module, das Zwischenergebnis unten mittig und dann rechts davon den fertigen Edelstein. Ihr könnt diesen dann benutzen, um ein kleines Geschenk einzupacken oder mit einem Faden irgendwo aufzuhängen.',
            main_challenge_2: 'Sonobe Module sind die Grundsteine von {0}. Du kannst diese Aufgabe erweitern in dem Du mehr von diesen Modulen selber faltest um komplexere Modelle zu bauen, wie in der oberen Hälfte des Bildes. Die Zahlen neben dem Modell entsprechen der Anzahl der Module, welche Du für das Modell benötigst. Sonobe Module sind nicht schwierig und schnell zu falten, aber ich schlage vor Deine Freunde und Familie dazu zu bringen Dir dabei zu helfen ;o)',
            sonobe_units: 'Sonobe Modulen',
            toshies_jewel: 'Toshies Edelstein',
            feedback_send_me: 'Schick mir eine Nachricht',
            feedback_whatever_you_do: 'Egal wie es rauskommt, mach ein Foto von Dir und dem Resultat, dann lade es hier ' +
                'mit einer Nachricht hoch wie gemein diese Aufgabe war. Nur ich allein bekomme das Foto und die Nachricht zu sehen.',
            feedback_your_message: 'Deine Nachricht',
            feedback_send_button: 'Abschicken',
            making_of_header_1: 'Ich fing an Karten für meine Freunde und Familie zu machen, als wir noch in Singapur lebten. Ich wollte etwas Kreatives tun was die Empfänger nach ein paar Monaten nicht gleich ins Altpapier werfen und dabei interessante Technologien benutzen, welchen ich übers Jahr hinweg über den Weg lief. Ich nehme dies generell als Gelegenheit Neues zu lernen. Nicht alles davon ist so einfach sichtbar, deshalb folgt hier etwas Hintergrund, beginnend zum Zeitpunkt wo ihr den Umschlag aufgemacht habt.',
            making_of_header_2: 'Der Text hier ist bewusst um technische und kulturelle Diversität geschrieben.',
            making_of_card_title: 'Die Karte',
            making_of_card_1: 'Die Karte selbst ist ganz normales Papier welches ihr in jeder Papeterie kaufen könnt. Geschrieben habe ich aber mit {0}, welche ich damals noch im {1} in Paya Lebar gekauft habe. Ich vermisse Japanische Papeterie, nicht nur weil sie so unglaublich diversifiziert ist sondern auch so raffiniert. Das trifft insbesondere auf meine grosse Sammlung von {2} zu, von welchen ich täglich einen auswähle.',
            making_of_card_overengineered: 'über-entwickelte Japanische Druckbleistifte',
            making_of_sonobe_title: 'Die Sonobe Module',
            making_of_sonobe_1: 'Auf einer kurzen Reise nach Fredrikstad in den Süden von Norwegen las ich {0}, ein exzellentes Buch in welchem beiläufig {1} erwähnt wird (ihr werdet vom Kontext überrascht sein). ',
            making_of_sonobe_2: 'Modulares Origami ist spannend weil es klassisches Origami mit Engineering verbindet. Natürlich darf weiterhin kein Leim verwendet werden, aber man kann viel grössere neue Modelle mit mehr als nur einem Stück Papier damit konstruieren. Origami erhält dadurch ganz neue interessante mathematische, geometrische und architektonische Aspekte.',
            making_of_sonobe_3: 'Die drei Sonobe Module die ich euch schicke sind nur eins von mehreren Modulen und ich empfehle {0} um zu sehen was man sonst noch damit bauen kann. Sonobe Module sind speziell nützlich um geometrische Formen zu bauen, typischerweise Polyhedren mit gleichseitig-dreieckigen Flaechen. Es sind flache Parallelogramme mit beidseitig diagonalen Taschen um sich gegenseitig zu kombinieren. Alle drei zusammengebaut werden zu einem Hexahedron das in diesem Kontext “Toshies Edelstein” genannt wird. Wenn ihr einen Abend damit verbringt, 30 Sonobe Module zu falten könnt ihr ein {1} bauen, welches besonders gut in diese Jahreszeit passt.',
            making_of_nfc_title: 'Near-Field Communication (NFC) Tags',
            making_of_nfc_1: 'Ich wollte nicht, dass ihr eine URL von Hand eintippen müsst. In der Vergangenheit habe ich das vielfach mit {0} getan, welche ihr heutzutage überall seht. Dieses Mal habe ich mich für {1} entschieden. ',
            making_of_nfc_2: 'Die digitale Komponente meiner Karte ist personalisiert. Ich muss deshalb wissen wer ihr seid. Normalerweise würdet ihr nach einem Passwort gefragt werden, aber ich bin mir sicher dass ihr euch nicht an ein weiteres erinnern möchtet. Ich hätte alle möglichen anderen Systeme einbauen können (Google, Facebook/Insta, TikTok, etc), aber das fühlte sich nicht gut an.',
            making_of_nfc_3: 'Das NFC-Tag welches eurer Telefon erkannt hat, um zu dieser Seite zu kommen ist die am meisten genutzte Funktion für {0}. Die URL auf dem Tag beinhaltet einen eindeutigen Code der euch identifiziert. Mit diesem Code prüfe ich, dass ihr mir bekannt seid, was zu eurer Identität führt. Wenn ich euch nicht kenne, dann landet ihr auf einer Seite, die einem Unbekannten frohe Feiertage wünscht. Diese Art von "Code Authentication" ist natürlich nicht für professionelle Einsätze gedacht, aber gut genug für meine Karte und sie verhindert, dass wir alle uns nochmal ein Passwort merken müssen, welches ihr alle bis nächstes Jahr vergessen habt. ',
            making_of_nfc_4: 'Man kann bedeutend mehr interessante Dinge mit NFC Tags tun. Es gibt einige Standards, viele davon für den öffentlichen Verkehr oder für kontaktloses Bezahlen. Man kann Gästen ein NFC Tag scannen lassen, um sich bei seinem Wifi anzumelden, das Licht anzustellen oder Kontakte auszutauschen.  Unglücklicherweise benötigen die interessanteren Bereiche ziemlich schnell eine App und wir wissen alle, dass die Hersteller der bekannten Systeme sich schwer mit solch experimentellen Dingen tun.',
            making_of_frontend_title: 'Die Webseite',
            making_of_frontend_1: 'Ich habe kein Talent für Web-Programmierung und auch das hier ist keine Ausnahme. Das Problem ist nicht, dass Benutzerschnittstellen asynchron und Ereignis-basiert sind, das verstehe ich alles. Aber ich finde das Chaos welches JavaScript mit seinen vielen Ausnahmen und Spezialitäten verursacht ganz fürchterlich. Sicher werdet ihr mir sagen, dass es nur ein paar spezielle Dinge sind, die man einfach wissen muss, aber ganz ehrlich, mein Leben ist zu kurz.',
            making_of_frontend_2: 'Ich habe deshalb der Einfachheit halber dieses Mal {0} und {1} benutzt. TypeScript macht Sinn, weil es die schlimmsten JavaScript-Fehler wenigstens meldet, bevor ich sie machen würde. Vue macht Sinn für mich mit seiner Kapselung von Design, Code und Struktur in seinen Vue Komponenten. Ich habe trotzdem viel zu viel Zeit mit diesem Front-End verbracht und dabei ausnahmslos alle Web-Browser mit ihrer Unvorhersehbarkeit verflucht.',
            making_of_frontend_3: 'Text lesbar zu machen ist bedeutend komplizierter als man meint, egal auf welchem Medium. Ich habe einiges an Erfahrung wie man den Inhalt von Texten gestaltet damit er verstanden wird, aber das Design, um das Ganze dann auf einem Bildschirm lesbar zu machen ist eine Wissenschaft für sich. Dies hat eine grosse Menge mit klassischer Typographie für optimale Lesbarkeit zu tun: Grösse, Linien-Höhe, Anzahl Worte pro Zeile und sogar der Kontrast zur Hintergrundfarbe. Wer sich genauer dafür interessiert darf kerne die Stil-Konfigurationen ansehen.',
            making_of_frontend_4: 'Der gesamte Text hier ist internationalisiert basierend auf einem Attribut eurer Identität. Internationalisierung bedeutet nicht nur dass der Text in einer personalisierten Sprache ist, sondern auch das Dinge wie ein Datum in einem regionalen Format dargestellt werden. Es ist ebenso wichtig, dass die Webseite ihre Version kennt und diese mit seiner App im Hintergrund abstimmt.',
            making_of_backend_title: 'Die App im Hintergrund',
            making_of_backend_1: 'Die App ist eine recht simple {0} {1} Applikation, serviert von einer {2}. FastAPI macht generell grossen Sinn für mich, weil es meine bevorzugte {3} Methode für {4} unterstützt und mir dabei sehr hübsch auch gleich eine {5} Spezifikation generiert. Solche Spezifikationen sind wichtig um Applikationen anschliessend miteinander zu sprechen zu lassen. In einem professionellen Umfeld müsste die App modularer aufgebaut sein, aber sie erfüllt völlig ihren Zweck so wie sie ist.',
            making_of_backend_2: 'Ich habe mich sehr früh dafür entschieden, dass die Hintergrund-App auch gleich die Webseite zur Verfügung stellen soll. Das ist eher etwas unüblich für diesen Typ von Applikation, aber es spart (ein klein wenig) Kosten. Es war nicht ganz einfach Azure davon zu überzeugen dies so zu tun. Wer sich dafür interessiert kann den Mechanismus im Detail auf {0} nachlesen.',
            making_of_backend_3: 'Das bringt allerdings auch Probleme. Die meisten modernen Webapps sind {0} und auch diese hier ist so eine. Klassische Webapps laden jede einzelne Seite neu, das bemerkt man an den Verzögerungen. SPAs laden ihre Daten im Hintergrund. Es gibt aber auch bei SPAs eine Ausnahme: Wenn ihr euch bei einer SPA anmeldet, dann leitet sie euch zweimal um. Zuerst zu einer Seite, welche vom Authentifizierungs-System kontrolliert wird und dann zurück zu der Seite wo ihr herkamt. Ihr tut das alles mehrmals täglich und wahrscheinlich bemerkt ihr es gar nicht mehr. Es ist auch normalerweise gar kein Problem, ausser ihr serviert eure moderne Webapp gleich wie diese von eurer App im Hintergrund. Es wird dann alles etwas komplizierter, weil die App im Hintergrund dann eben auch für diejenigen Dinge antworten muss, für welche eigentlich die Webseite gedacht ist. Es gibt viele Möglichkeiten damit umzugehen, aber alle sind hässlich. Somit ist das der Preis dafür sparsam zu sein. '
        }
    }
})
